indexer
{
}

searchd
{
  listen = localhost:9191:mysql41
  log = /Users/admin/rails/opensource/ArtElectronics/log/searchd.log
  query_log = /Users/admin/rails/opensource/ArtElectronics/log/searchd.query.log
  pid_file = /Users/admin/rails/opensource/ArtElectronics/tmp/pids/searchd.development.pid
  workers = threads
  binlog_path = /Users/admin/rails/opensource/ArtElectronics/tmp/binlog/production
}

source post_core_0
{
  type = mysql
  sql_host = localhost
  sql_user = root
  sql_pass = 
  sql_db = ae_project_new
  sql_query_pre = SET TIME_ZONE = '+0:00'
  sql_query_pre = SET NAMES utf8
  sql_query = SELECT SQL_NO_CACHE `posts`.`id` * 2 + 0 AS `id`, `posts`.`title` AS `title`, `posts`.`intro` AS `intro`, `posts`.`content` AS `content`, `posts`.`id` AS `sphinx_internal_id`, 'Post' AS `sphinx_internal_class`, 0 AS `sphinx_deleted`, `posts`.`user_id` AS `user_id`, `posts`.`hub_id` AS `hub_id`, UNIX_TIMESTAMP(`posts`.`published_at`) AS `published_at`, UNIX_TIMESTAMP(`posts`.`created_at`) AS `created_at`, UNIX_TIMESTAMP(`posts`.`updated_at`) AS `updated_at` FROM `posts`  WHERE (`posts`.`id` BETWEEN $start AND $end AND state = 'published') GROUP BY `posts`.`id`, `posts`.`title`, `posts`.`intro`, `posts`.`content`, `posts`.`id`, `posts`.`user_id`, `posts`.`hub_id`, `posts`.`published_at`, `posts`.`created_at`, `posts`.`updated_at`  ORDER BY NULL
  sql_query_range = SELECT IFNULL(MIN(`posts`.`id`), 1), IFNULL(MAX(`posts`.`id`), 1) FROM `posts`
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = user_id
  sql_attr_uint = hub_id
  sql_attr_timestamp = published_at
  sql_attr_timestamp = created_at
  sql_attr_timestamp = updated_at
  sql_attr_string = sphinx_internal_class
  sql_query_info = SELECT `posts`.* FROM `posts`  WHERE (`posts`.`id` = ($id - 0) / 2)
}

index post_core
{
  type = plain
  path = /Users/admin/rails/opensource/ArtElectronics/searchd_indexes/post_core
  docinfo = extern
  morphology = stem_ru
  charset_type = utf-8
  source = post_core_0
}

index post
{
  type = distributed
  local = post_core
}
